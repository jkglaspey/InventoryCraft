@startuml

+class DeleteAllItemsController {
    -Button cancelButton;
    -AudioClip buttonSoundPlayer
    -List<Item> inventory

    +DeleteAllItemsController(List<Item> inventory, Stage stage)
    ~void cancel(ActionEvent event)
    ~void deleteItems(ActionEvent event)
}

+class ImportController {
    -Label errorLabel
    -Label filePathLabel
    -Button loadItemsButton
    -AudioClip buttonSoundPlayer
    -List<Item> inventory

    +ImportController(List<Item> inventory, Stage stage)
    +ImportController()
    +void initialize()
    ~void cancel(ActionEvent event)
    ~void chooseFile(ActionEvent event)
    -String getFileExtension(String path)
    -boolean isValidFileExtension(String extension)
    ~void loadItems(ActionEvent event)
    -File openFile(String path)
    -List<Item> importItems(File file)
    -List<Item> parseTSVFile(File file)
    -List<Item> parseJSONFile(File file)
    -List<Item> parseHTMLFile(File file)
    -JsonStreamParser createJsonStream(File file, FileInputStream stream)
}

+class InventoryManagementApplication {
    +void start(Stage stage)
    +{static}void main(String[] args)
}

+class Item {
    -String name
    -String serialNumber
    -String cost

    +Item(String name, String serialNumber, String cost)
    +String getName()
    +void setName(String name)
    +String getSerialNumber()
    +void setSerialNumber(String serialNumber)
    +String getCost()
    +void setCost(String cost)
    -String convertCost(String cost)
}

+class ItemController {
    -TextField costTextField
    -Label errorBlankLabel
    -Label errorCostLabel
    -Label errorNameLabel
    -Label errorSerialLabel
    -TextField nameTextField
    -Button confirmButton
    -StackPane pane
    -TextField serialTextField
    -int index
    -AudioClip buttonSoundPlayer
    -List<Item> inventory
    -{static}String RED

    +ItemController(List<Item> inventory, Stage stage)
    +ItemController()
    +ItemController(List<Item> inventory, int index, Stage stage)
    -void loadScene(Stage stage)
    +void initialize()
    ~void cancel(ActionEvent event)
    ~void playButtonClick(ActionEvent event)
    ~void completeScene(ActionEvent event)
    -boolean isNoErrors(String name, String serialNumber, String cost)
    -boolean isNotEmpty(String name, String serialNumber, String cost)
    -boolean isNameValid(String name)
    -boolean isSerialNumberValid(String serialNumber)
    -boolean isCostValid(String cost)
    -void setNameErrorLabelInvisible(boolean value)
    -void setSerialNumberErrorLabelInvisible(boolean value)
    -void setCostErrorLabelInvisible(boolean value)
    -boolean isSerialNumberUnique(String serialNumber, int index, List<Item> list)
    -void setBlankErrorLabelInvisible(boolean value)
    -void changeSerialNumberText(boolean value)
}

+class LoadSceneController {
    -StackPane pane
    -Pane pane1
    -Pane pane4
    -MediaView loadView
    -MediaView menuView
    -Pane paneColor
    -Button sceneButton
    -Button exitButton
    -Button userGuideButton
    -Label versionLabel
    -AudioClip soundPlayer

    +void initialize()
    ~void changeSceneToMenu(ActionEvent event)
    ~void closeWindow(ActionEvent event)
    ~void openUserGuide(ActionEvent event)
}

+class MainSceneController {
    -VBox bindPane
    -HBox bottomControls
    -Button deleteItemButton
    -Button editItemButton
    -TableView<Item> itemView
    -ObservableList<Item> listOfItems = FXCollections.observableArrayList()
    -List<Item> inventory
    -HBox middleControls
    -TableColumn<Item, String> monetaryColumn
    -TableColumn<Item, String> nameColumn
    -StackPane pane
    -Pane positionPane1
    -Pane positionPane2
    -Pane positionPane3
    -Pane positionPane4
    -Pane positionPane5
    -Pane positionPane6
    -ToggleGroup searchButtons
    -TableColumn<Item, String> serialColumn
    -TextField textPane
    -HBox topControls
    -Parent scene
    -AudioClip buttonSoundPlayer
    -AudioClip smallButtonSoundPlayer

    +MainSceneController(List<Item> inventory, Stage stage)
    +MainSceneController()
    +void initialize()
    -void refreshTable()
    -void resetListToInventory()
    ~void createNewItem(ActionEvent event)
    ~void deleteAllItems(ActionEvent event)
    ~void deleteItem(ActionEvent event)
    ~void editItem(ActionEvent event)
    -int getIndex(Item item)
    -void buttonsDisabled(boolean value)
    ~void loadInventory(ActionEvent event)
    ~void saveInventory(ActionEvent event)
    ~void searchForItem(ActionEvent event)
    -void searchForName(String name)
    -void searchForSerialNumber(String serialNumber)
    ~void playSmallClickSound(ActionEvent event)
}

+class SaveController {
    -Label errorLabel
    -ToggleGroup fileButtons
    -TextField fileNameField
    -Label filePathLabel
    -StackPane pane
    -AudioClip buttonSoundPlayer
    -AudioClip smallButtonSoundPlayer
    -List<Item> inventory

    +SaveController(List<Item> inventory, Stage stage)
    +SaveController(List<Item> list)
    +void initialize()
    ~void cancel(ActionEvent event)
    ~void chooseFile(ActionEvent event)
    ~void playSmallButtonClick(ActionEvent event)
    ~void enterName(ActionEvent event)
    ~void saveItems(ActionEvent event)
    -void chooseFile(String fileType)
    -boolean isFilePathInvalid(String path)
    -void isErrorLabelVisible(boolean value)
    -void saveToTSV(String path, String name)
    -void saveToJSON(String path, String name)
    -void saveToHTML(String path, String name)
    -String combinePath(String path, String name, String extension)
}

DeleteAllItemsController -- MainSceneController
ImportController -- Item
ImportController -- MainSceneController
InventoryManagementApplication -- LoadSceneController
ItemController -- Item
ItemController -- MainSceneController
LoadSceneController -- MainSceneController
SaveController -- Item
SaveController -- MainSceneController
MainSceneController -- Item

@enduml